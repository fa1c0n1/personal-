---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stargate-spark-facade
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stargate-spark-facade
  template:
    metadata:
      labels:
        app: stargate-spark-facade
    spec:
      containers:
        - name: driver
          image: docker.apple.com/aml/stargate-spark-facade:1.3.56
          command: [ "/bin/sh" ]
          args: [ "-c", "set -a; [ -f /app-config/app.secrets ] && . /app-config/app.secrets; set +a ; cd /opt; /opt/start-spark-facade.sh;" ]
          #          args: [ "-c", "while true; do echo $(date -u) >> /tmp/out; sleep 5; done" ]
          ports:
            - containerPort: 8888
              protocol: TCP
            - containerPort: 5005
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
          #          livenessProbe:
          #            failureThreshold: 3
          #            httpGet:
          #              path: /liveness
          #              port: 8888
          #              scheme: HTTP
          #            initialDelaySeconds: 30
          #            periodSeconds: 30
          #            successThreshold: 1
          #            timeoutSeconds: 30
          #          readinessProbe:
          #            failureThreshold: 3
          #            httpGet:
          #              path: /readiness
          #              port: 8888
          #              scheme: HTTP
          #            periodSeconds: 30
          #            successThreshold: 1
          #            timeoutSeconds: 1
          resources:
            limits:
              cpu: '4'
              memory: 8Gi
            requests:
              cpu: '2'
              memory: 8Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /opt/stargate/logs/
              name: stargate-facade-logs
            - mountPath: /app-config
              name: app-config-data

        - name: splunkforwarder
          image: docker.apple.com/splunk-ist/splunk-universalforwarder:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: SPLUNK_LOG_MONITOR
              value: /opt/stargate/logs/stargate-spark-facade.log|stargate_uat|stargate-facade-log
            - name: SPLUNK_CLUSTER
              value: iag_prod
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/splunk/var
              name: splunkforwarder-temp
            - mountPath: /etc/splunk/podinfo
              name: podinfo
              readOnly: true
            - mountPath: /opt/stargate/logs/
              name: stargate-facade-logs

      initContainers:
        - name: app-config-init-container
          image: docker.apple.com/appconfig/app-config-init-container:2.2.6
          imagePullPolicy: IfNotPresent
          env:
            - name: spring.cloud.config.name
              value: M01469
            - name: spring.cloud.config.label
              value: UAT_WEST2
            - name: spring.cloud.config.profile
              value: SHURI_AWS
            - name: appconfig.init-container.property.download.enabled
              value: "true"
            - name: appconfig.init-container.property.download.path
              value: /app-config
            - name: appconfig.init-container.property.download.fileName
              value: app.secrets
            - name: appconfig.init-container.resource.enabled
              value: "true"
            - name: appconfig.init-container.resource.defaultPath
              value: /app-config
            - name: appconfig.init-container.resource.fileNames
              value: "spark.conf,core-site.xml,hive-site.xml,keytab.txt,krb5.conf"
          envFrom:
            - secretRef:
                name: appconfig-uat
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /app-config
              name: app-config-data

      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: stargate-spark-facade
      schedulerName: default-scheduler
      volumes:
        - name: stargate-facade-logs
        - name: podinfo
        - name: splunkforwarder-temp
        - emptyDir:
            medium: Memory
          name: app-config-data

  revisionHistoryLimit: 10
  serviceName: stargate-spark-facade

---

apiVersion: v1
kind: Service
metadata:
  name: stargate-spark-facade
  labels:
    app: stargate-spark-facade
spec:
  clusterIP: None
  ports:
    - name: web
      port: 80
      targetPort: 8888
    - name: driver-port
      port: 8080
      targetPort: 8080
    - name: debug-port
      port: 5005
      targetPort: 5005
    - name: grpc-port
      port: 9090
      targetPort: 9090
  selector:
    app: stargate-spark-facade
