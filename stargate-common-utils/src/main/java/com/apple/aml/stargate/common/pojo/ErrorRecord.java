package com.apple.aml.stargate.common.pojo;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import org.apache.avro.generic.GenericRecord;

import java.io.Serializable;
import java.util.Map;
import java.util.UUID;

import static com.apple.aml.stargate.common.constants.CommonConstants.MetricLabels.ERROR_MESSAGE;
import static com.apple.jvm.commons.util.Strings.isBlank;

@Data
@AllArgsConstructor
@NoArgsConstructor(force = true)
public class ErrorRecord implements Serializable {
    @NonNull
    private String nodeName;
    @NonNull
    private String nodeType;
    @NonNull
    private String stage;
    @NonNull
    private String key;
    @NonNull
    private GenericRecord record;
    @NonNull
    private Exception exception;
    @NonNull
    private String errorMessage;

    public void setKey(final String key) {
        if (!isBlank(key)) {
            this.key = key;
        }
        this.key = String.format("autogenerated-%s", UUID.randomUUID().toString());
    }

    public Map<String, Object> asMap() {
        return Map.of("nodeName", nodeName, "nodeType", nodeType, "stage", stage, "key", key, "record", record, "exception", exception, ERROR_MESSAGE, errorMessage);
    }

    public ErrorRecord applyOverride(final Map<String, Object> overrides) {
        this.record = (GenericRecord) overrides.getOrDefault("record", record);
        this.exception = (Exception) overrides.getOrDefault("exception", exception);
        this.errorMessage = (String) overrides.getOrDefault(ERROR_MESSAGE, errorMessage);
        return this;
    }
}
